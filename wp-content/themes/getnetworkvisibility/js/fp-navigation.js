(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["fp-navigation"],{

/***/ "../src/modules/navigation/navigation.core.js":
/*!****************************************************!*\
  !*** ../src/modules/navigation/navigation.core.js ***!
  \****************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _main_js_fp_breakpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../main/js/fp.breakpoint */ \"../src/main/js/fp.breakpoint.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n(function ($) {\n  var FP_NAVIGATION = 'fp.navigation';\n  /**\n   *\n   * @param $element\n   * @param $option\n   * @constructor\n   */\n\n  function FpNavigation($element, $option) {\n    var $this = this;\n    $this.element = $element;\n    $this.jqueryElement = $($element);\n    $this.elementActionList = false;\n    $this.topPadding = 0;\n    $this.options = $.extend({}, FpNavigation.prototype.DEFAULTS, $option);\n\n    if ($this.options.elementAction) {\n      $this.elementActionList = [];\n      $($this.element).find($this.options.elementAction).each(function ($key, $element) {\n        $this.elementActionList.push($($element));\n      });\n    }\n\n    $this.init();\n  }\n  /**\n   *\n   * @type {{submenu: boolean|string, elementOpenCssClass: string, mobileNav: boolean|string, elementAction: boolean|string, bodyCssClass: string|boolean, globalMobileNav: boolean|string, autoClose: boolean, toggleMenu: boolean|string}}\n   */\n\n\n  FpNavigation.prototype.DEFAULTS = {\n    'elementOpenCssClass': 'open',\n    'elementAction': false,\n    'bodyCssClass': 'menu-open',\n    'autoClose': true,\n    'submenu': false,\n    'toggleMenu': false,\n    'mobileNav': false,\n    'globalMobileNav': false,\n    'onlyMobile': false\n  };\n\n  FpNavigation.prototype.init = function () {\n    var $this = this;\n    $this.setupGlobalMobileNav();\n    $this.binds();\n    $this.publishEvent('init');\n  };\n\n  FpNavigation.prototype.binds = function () {\n    var $this = this;\n    $(window).resize(function () {\n      $this.setupGlobalMobileNav();\n    });\n\n    if ($this.elementActionList && $this.elementActionList.length > 0 && (!$this.options.onlyMobile || $this.options.onlyMobile && Object(_main_js_fp_breakpoint__WEBPACK_IMPORTED_MODULE_0__[\"isSmall\"])())) {\n      $($this.elementActionList).each(function ($index, $element) {\n        $($element).bind('click', function ($event) {\n          $event.preventDefault();\n          $this.itemClicked($($element).parent());\n        });\n      });\n    }\n\n    if ($this.options.autoClose) {\n      $(document).bind('click', function ($event) {\n        if ($($event.target).closest($this.element).length < 1) {\n          var _iterator = _createForOfIteratorHelper($this.elementActionList),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var $element = _step.value;\n\n              if ($($element).parent().hasClass($this.options.elementOpenCssClass)) {\n                $this.close($($element).parent());\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      });\n    }\n\n    if ($this.options.toggleMenu) {\n      $($this.options.toggleMenu).bind('click', function () {\n        if ($(document.body).hasClass($this.options.bodyCssClass)) {\n          $this.removeClassOnBody();\n        } else {\n          $this.addClassOnBody();\n        }\n      });\n    }\n\n    $this.publishEvent('binds');\n  };\n  /**\n   *\n   * @param $item\n   */\n\n\n  FpNavigation.prototype.itemClicked = function ($item) {\n    var $this = this;\n    var $jQueryItem = $($item);\n\n    if ($jQueryItem) {\n      $this.publishEvent('itemClicked');\n\n      if ($jQueryItem.hasClass($this.options.elementOpenCssClass)) {\n        $this.close($item, $jQueryItem);\n      } else {\n        $this.open($item, $jQueryItem);\n      }\n    }\n  };\n  /**\n   *\n   * @param $item\n   * @param $jQueryItem\n   */\n\n\n  FpNavigation.prototype.open = function ($item) {\n    var $jQueryItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var $this = this;\n\n    if (!$jQueryItem) {\n      $jQueryItem = $($item);\n    }\n\n    if ($this.elementActionList && $this.elementActionList.length > 1) {\n      $($this.elementActionList).not($jQueryItem).stop().each(function ($index, $element) {\n        if (!$element.parent().is($item)) {\n          $this.close($element.parent());\n        }\n      });\n    }\n\n    if ($this.options.submenu) {\n      $jQueryItem.find($this.options.submenu).slideDown('fast');\n    }\n\n    $this.addClassOnBody();\n    $jQueryItem.addClass($this.options.elementOpenCssClass);\n    $this.publishEvent('itemOpen');\n  };\n  /**\n   *\n   * @param $item\n   * @param $jQueryItem\n   */\n\n\n  FpNavigation.prototype.close = function ($item) {\n    var $jQueryItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var $this = this;\n\n    if (!$jQueryItem) {\n      $jQueryItem = $($item);\n    }\n\n    $this.publishEvent('itemClose', $jQueryItem);\n\n    if ($this.options.submenu) {\n      $jQueryItem.find($this.options.submenu).slideUp('fast');\n    }\n\n    $this.removeClassOnBody();\n    $jQueryItem.removeClass($this.options.elementOpenCssClass);\n  };\n\n  FpNavigation.prototype.addClassOnBody = function () {\n    var $this = this;\n\n    if ($this.options.bodyCssClass) {\n      $(document.body).addClass($this.options.bodyCssClass);\n    }\n  };\n\n  FpNavigation.prototype.removeClassOnBody = function () {\n    var $this = this;\n\n    if ($this.options.bodyCssClass) {\n      $(document.body).removeClass($this.options.bodyCssClass);\n    }\n  };\n  /**\n   *\n   * @param {string} $eventName\n   * @param {Object} $data\n   */\n\n\n  FpNavigation.prototype.publishEvent = function () {\n    var $eventName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'init';\n    var $data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var $this = this;\n    $($this.element).trigger(\"\".concat(FP_NAVIGATION, \".\").concat($eventName), $data);\n  };\n\n  FpNavigation.prototype.setupGlobalMobileNav = function () {\n    var $this = this;\n\n    if ($this.options.mobileNav) {\n      $($this.options.mobileNav).each(function ($index, $element) {\n        $this.topPadding += $($element).outerHeight();\n      });\n\n      if ($this.options.globalMobileNav) {\n        $($this.options.globalMobileNav).css('top', $this.topPadding);\n      }\n    }\n  };\n  /**\n   *\n   * @param $opts\n   * @returns {Window.jQuery|*|jQuery|HTMLElement}\n   */\n\n\n  $.fn.menuNavigation = function ($opts) {\n    var _$instance;\n\n    var $this = $(this);\n\n    if (!$this.length) {\n      return $this;\n    }\n\n    var $typeofOpts = _typeof($opts) === 'object';\n    var $instance = $this.data(FP_NAVIGATION);\n\n    if ($typeofOpts || !$opts) {\n      $instance = new FpNavigation($this, $opts);\n      $this.data(FP_NAVIGATION, $instance);\n      return this;\n    }\n\n    if (!$instance) {\n      $.error(\"Plugin must be initialised before using method: \".concat($opts));\n    }\n\n    if (!$typeofOpts && $opts.indexOf('_') === 0) {\n      $.error(\"Method \".concat(opts, \" is private!\"));\n    }\n\n    if ($instance && !($opts in $instance)) {\n      $.error(\"Method \".concat($opts, \" does not exist!\"));\n    }\n\n    var args = Array.prototype.slice.call(arguments, 1);\n    return (_$instance = $instance)[$opts].apply(_$instance, _toConsumableArray(args));\n  };\n})(window.jQuery);\n\n//# sourceURL=webpack:///../src/modules/navigation/navigation.core.js?");

/***/ })

}]);