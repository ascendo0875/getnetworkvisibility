<?php
namespace FINNPartners\Theme\Block\Instance;

use FINNPartners\Theme\Block\Instance\Fields\MediaVisualFields;
use FINNPartners\Theme\Service\VideoFrame;
use FINNPartners\Theme\Theme;
use WpAdvanceCustomFieldsExtend\AbstractClass\Block;
use WpAdvanceCustomFieldsExtend\Service\Media;

class MediaVisual extends Block {

    /**
     * @var MediaVisualFields 
     */
    private $fields;

    /**
     * @var VideoFrame|false
     */
    private $video = null;
    
    /**
     * @param int|false $postId
     * @param array $block
     * @param bool $isPreview
     * @return void
     */
    public function __construct($postId = false, array $block = [], bool $isPreview = false)
    {        
        $this->setFields(new MediaVisualFields($postId, !empty($block['id']) ? $block['id'] : false));
        
        parent::__construct($block);
        
        $this->setIsPreview($isPreview)->execute();
    }

    public function execute(): Block
    {
//        $this->getVideo();

        if ($this->getFields()->getScale()) {
            $this->addNewClassName($this->getFields()->getScale());
        }

        if ($this->getFields()->getImage() instanceof Media) {
            $this->getFields()->getImage()->setCrop(Theme::IMAGE_SIZES['media-visual']['name']);
        }

        return parent::execute(); // TODO: Change the autogenerated stub
    }

    /**
     * @return false|VideoFrame
     */
    public function getVideo()
    {
        if (is_null($this->video)) {
            $VideoFrame = false;

            if ($this->getFields()->getVideoUrl()) {
                /** @var VideoFrame $VideoFrame */
                $VideoFrame = new VideoFrame($this->getFields()->getVideoUrl());

                if ($VideoFrame->getVideoID()) {
                    $VideoFrame->setAutoplay(true);
                }
            }

            $this->setVideo($VideoFrame);
        }

        return $this->video;
    }

    /**
     * @param false|VideoFrame $video
     * @return MediaVisual
     */
    public function setVideo($video)
    {
        $this->video = $video;
        return $this;
    }

    /**
     * @return MediaVisualFields
     */
    public function getFields(): MediaVisualFields
    {
        return $this->fields;
    }
    
    /**
     * @param MediaVisualFields $fields
     * @return $this
     */
    protected function setFields(MediaVisualFields $fields): self
    {
        $this->fields = $fields;
        
        return $this;
    }
}