<?php

namespace FINNPartners\Theme\Block\Register;

use DOMDocument;
use DOMElement;
use WpAdvanceCustomFieldsExtend\AbstractClass\BlockStyle;

class SocialLink extends BlockStyle
{
    public function __construct()
    {

        add_filter('render_block', [$this, 'renderBlock'], 10, 2);

    }

    /**
     * @param string $class
     * @return SocialLink
     */
    public static function getInstance(string $class = SocialLink::class): SocialLink
    {
        return parent::getInstance($class); // TODO: Change the autogenerated stub
    }

    /**
     * @param string $content
     * @param array $parsed
     * @return false|string
     */
    public function renderBlock(string $content, array $parsed)
    {
        if ($parsed['blockName'] === 'core/social-link' && isset($parsed['attrs']) && isset($parsed['attrs']['service'])) {
            switch ($parsed['attrs']['service']) {
                case 'linkedin':
                case 'youtube':
                case 'twitter':
                    $content = $this->replaceWithIcon($content, $parsed['attrs']['service']);
                    break;
                default:
                    break;
            }
        }

        return $content;
    }

    /**
     * @param string $content
     * @param string $icon
     * @return false|string
     * @throws \DOMException
     */
    public function replaceWithIcon(string $content, string $icon) {
        $SearchDOM = new DOMDocument();
        libxml_use_internal_errors(true);
        $SearchDOM->loadHTML($content);
        libxml_clear_errors();

        foreach ($SearchDOM->getElementsByTagName('svg') as $item) {
            /** @var DOMElement $item */
            $item->parentNode->removeChild($item);
        }

        foreach ($SearchDOM->getElementsByTagName('span') as $item) {
            /** @var DOMElement $item */

            $iconElement = $SearchDOM->createElement('i');
            $iconElement->setAttribute('class', "icon icon-{$icon}");

            $item->parentNode->insertBefore(
                $iconElement, $item
            );

        }
        $content = $SearchDOM->saveHTML();

        return $content;
    }
}